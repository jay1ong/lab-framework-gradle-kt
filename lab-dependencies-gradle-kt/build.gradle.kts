dependencies {
    constraints {
        api("cn.jaylong:lab-autoconfig-gradle-kt:$version")
        api("cn.jaylong:lab-axon-gradle-kt:$version")
        api("cn.jaylong:lab-core-gradle-kt:$version")
        api("cn.jaylong:lab-data-jpa-gradle-kt:$version")
        api("cn.jaylong:lab-mq-gradle-kt:$version")
        api("cn.jaylong:lab-security-gradle-kt:$version")
        api("cn.jaylong:lab-snowflake-gradle-kt:$version")
        api("cn.jaylong:lab-web-gradle-kt:$version")
//        // core
        api("org.jetbrains.kotlin:kotlin-reflect:${properties["kotlinReflectVersion"]}")
        api("cn.hutool:hutool-all:${properties["hutoolVersion"]}")
        api("org.projectlombok:lombok:${properties["lombokVersion"]}")
        api("com.alibaba:fastjson:${properties["fastjsonVersion"]}")
        api("org.springframework.boot:spring-boot-starter-freemarker:${properties["springbootVersion"]}")
        api("org.springframework.boot:spring-boot-starter-thymeleaf:${properties["springbootVersion"]}")
        api("org.springframework.boot:spring-boot-starter-validation:${properties["springbootVersion"]}")
        api("org.springframework.boot:spring-boot-starter:${properties["springbootVersion"]}")
        api("org.springframework.boot:spring-boot-starter-test:${properties["springbootVersion"]}")
        api("org.springframework.boot:spring-boot-autoconfigure:${properties["springbootVersion"]}")
        api("org.springframework.boot:spring-boot-configuration-processor:${properties["springbootVersion"]}")
        api("org.springframework.cloud:spring-cloud-starter-bootstrap:${properties["springcloudstarterVersion"]}")
        api("org.springframework.cloud:spring-cloud-starter:${properties["springcloudstarterVersion"]}")
        api("org.springframework.boot:spring-boot-gradle-plugin:${properties["springbootgradlepluginVersion"]}")
        api("org.apache.httpcomponents:httpclient:${properties["httpclientVersion"]}")
        api("com.tngtech.archunit:archunit:${properties["archunitVersion"]}")
        api("org.mapstruct:mapstruct:${properties["mapstructVersion"]}")
        api("org.mapstruct:mapstruct-processor:${properties["mapstructVersion"]}")
        api("javax.annotation:javax.annotation-api:${properties["javaxannotationapiVersion"]}")
        api("junit:junit:${properties["junitVersion"]}")
        api("org.junit.jupiter:junit-jupiter-api:${properties["junitjupiterVersion"]}")
        api("org.junit.jupiter:junit-jupiter-engine:${properties["junitjupiterVersion"]}")
        // data-jpa
        api("com.querydsl:querydsl-apt:${properties["querydslVersion"]}")
        api("com.querydsl:querydsl-apt:${properties["querydslVersion"]}:jpa")
        api("com.querydsl:querydsl-jpa:${properties["querydslVersion"]}")
        api("com.querydsl:querydsl-sql-codegen:${properties["querydslVersion"]}")
        api("org.hibernate.javax.persistence:hibernate-jpa-2.1-api:${properties["hibernatejpa21apiVersion"]}")
        api("com.vladmihalcea:hibernate-types-55:${properties["hibernatetypes55Verison"]}")
        api("org.postgresql:postgresql:${properties["postgresqlVersion"]}")
        api("org.springframework.boot:spring-boot-starter-data-jpa:${properties["springbootVersion"]}")
        api("jakarta.persistence:jakarta.persistence-api:${properties["jakartapersistenceapiVersion"]}")
        api("javax.persistence:javax.persistence-api:${properties["javaxpersistenceapiVersion"]}")
        api("com.cosium.spring.data:spring-data-jpa-entity-graph:${properties["springdatajpaentitygraphVersion"]}")
        // web
        api("com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-discovery:${properties["nacoscloudVersion"]}")
        api("com.alibaba.nacos:nacos-client:${properties["nacosclientVersion"]}")
        api("com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-config:${properties["nacoscloudVersion"]}")
        api("org.springframework.boot:spring-boot-starter-web:${properties["springbootVersion"]}")
        api("io.springfox:springfox-boot-starter:${properties["springfoxVersion"]}")
        api("org.springframework.boot:spring-boot-starter-undertow:${properties["springbootVersion"]}")
        // axon
        api("org.axonframework:axon-modelling:${properties["axonframeworkVersion"]}")
        api("org.axonframework:axon-spring-boot-starter:${properties["axonframeworkVersion"]}")
        api("org.axonframework:axon-test:${properties["axonframeworkVersion"]}")
        // mq
        api("org.springframework.kafka:spring-kafka:${properties["springkafkaVersion"]}")
        // security
        api("org.springframework.boot:spring-boot-starter-security:${properties["springbootVersion"]}")
        api("org.springframework.security:spring-security-oauth2-resource-server:${properties["springsecurityoauth2resourceserverVersion"]}")
        api("org.springframework.security:spring-security-oauth2-jose:${properties["springsecurityoauth2joseVersion"]}")
        api("javax.servlet:javax.servlet-api:${properties["javaxservletapiVersion"]}")
    }
}
